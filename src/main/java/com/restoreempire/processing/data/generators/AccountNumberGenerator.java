package com.restoreempire.processing.data.generators;

public class AccountNumberGenerator extends DataGenerator {
    // TODO: промозговать
    // 1-я группа состоит из 5 разрядов и указывает на балансовый счёт 2-го порядка, на котором открыт счёт. 
    // Правила выбора конкретного балансового счёта регламентируются действующим планом счетов. 
    // Балансовый счёт указывает назначение счёта, например, счёт расчётный коммерческого негосударственного юридического лица (40702) или счёт частного вклада, открытый для нерезидента на срок от 181 дней до 1 года 42605. 
    // Балансовый счёт 2-го порядка делится в свою очередь на балансовый счёт 1-го порядка (3 символа) и номер счёт второго порядка в первом порядке. 
    // В балансовом счёте первого порядка в свою очередь выделяется первый символ, который указывает раздел плана счетов.
    // 2-я группа состоит из 3 символов и указывает на валюту, в которой открыт счёт в соответствии с общероссийским классификатором валют.
    // 3-я группа состоит из одного символа и содержит т. н. ключ счёта, который рассчитывается на основе известного алгоритма[1] с учётом всех остальных цифр счёта, а также БИКа банка, в котором открыт счёт. Этот ключ необходим для того, чтобы программно можно было отлавливать и исключать неизбежные ошибки при ручном вводе счёта, а также ситуацию, когда клиент по ошибке использует номер счёта одного банка в другом.
    // 4-я группа состоит из 4 разрядов и указывает банковское подразделение, в котором открыт счёт (филиал или допофис). Формирование этой группы должно определяться в учётной политике банка. Если банк не имеет филиалов, то эта группа содержит 0000.
    // 5-я группа состоит из оставшихся 7 цифр и содержит номер лицевого счёта. Эта группа в свою очередь делится на подгруппы, но способ деления зависит от используемого балансового счёта, а также от учётной политики банка.

    public String generate(){
        return buildRandomDigits(16).toString();
    }
}
